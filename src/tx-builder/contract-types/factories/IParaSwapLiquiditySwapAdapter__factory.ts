/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IParaSwapLiquiditySwapAdapter } from "../IParaSwapLiquiditySwapAdapter";

export class IParaSwapLiquiditySwapAdapter__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IParaSwapLiquiditySwapAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IParaSwapLiquiditySwapAdapter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToSwapFrom",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetToSwapTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountToReceive",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapAllBalanceOffset",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapCalldata",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "augustus",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct IParaSwapLiquiditySwapAdapter.PermitSignature",
        name: "permitParams",
        type: "tuple",
      },
    ],
    name: "swapAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
